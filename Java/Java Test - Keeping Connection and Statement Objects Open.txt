

*********************
Test case 1
*********************

drop table ttlemc.x;

create table ttlemc.x(a number);


import java.sql.*;
import oracle.jdbc.*;
import java.lang.Object;

class test1
{

public static void main (String args [])
  	throws SQLException, ClassNotFoundException
  	{
		int i=0;
		String SQL;
		while (i++<=1000)
		{
    			Connection conn = null;
			DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
			conn = DriverManager.getConnection
				("jdbc:oracle:thin:@(DESCRIPTION_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.6.21)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD591)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.11)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD592)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.61)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD593)(DELAY=15)(RETRIES=20)))))", "ttlemc", "ttlemc");
			PreparedStatement pStmt;
			SQL ="INSERT INTO x(A) VALUES( ?)";
			pStmt = conn.prepareStatement(SQL);
			pStmt.setInt(1, i);
			pStmt.executeUpdate();
			if(pStmt!=null)
			{
				pStmt.close();
			}
			if (conn!=null)
			{
				conn.close();
			}
		}
	}
}



-- > time java test1

real    7m16.797s
user    0m7.410s
sys     0m0.419s




*********************
Test case 2
*********************


drop table ttlemc.x;

create table ttlemc.x(a number);

import java.sql.*;
import oracle.jdbc.*;
import java.lang.Object;

class test2
{

public static void main (String args [])
  	throws SQLException, ClassNotFoundException
  	{
		int i=0;
		String SQL;
		Connection conn = null;
		DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
		conn = DriverManager.getConnection
			("jdbc:oracle:thin:@(DESCRIPTION_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.6.21)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD591)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.11)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD592)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.61)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD593)(DELAY=15)(RETRIES=20)))))", "ttlemc", "ttlemc");
		PreparedStatement pStmt;
		SQL ="INSERT INTO x(A) VALUES( ?)";
		while (i++<=1000)
		{
			pStmt = conn.prepareStatement(SQL);
			pStmt.setInt(1, i);
			pStmt.executeUpdate();
			if(pStmt!=null)
			{
				pStmt.close();
			}
		}
		if (conn!=null)
		{
			conn.close();
		}
	}
}

-- > time java test2

real    0m14.489s
user    0m1.146s
sys     0m0.062s



*********************
Test case 3
*********************


drop table ttlemc.x;

create table ttlemc.x(a number);



import java.sql.*;
import oracle.jdbc.*;
import java.lang.Object;

class test3
{

public static void main (String args [])
  	throws SQLException, ClassNotFoundException
  	{
		int i=0;
		String SQL;
		Connection conn = null;
		DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
		conn = DriverManager.getConnection
			("jdbc:oracle:thin:@(DESCRIPTION_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.6.21)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD591)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.11)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD592)(DELAY=15)(RETRIES=20))))(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=172.17.7.61)(PORT=1565))(CONNECT_DATA=(SERVICE_NAME=PRD59)(FAILOVER_MODE=(TYPE=SELECT)(METHOD=BASIC)(BACKUP=PRD593)(DELAY=15)(RETRIES=20)))))", "ttlemc", "ttlemc");
		PreparedStatement pStmt;
		SQL ="INSERT INTO x(A) VALUES( ?)";
		pStmt = conn.prepareStatement(SQL);
		while (i++<=1000)
		{
			pStmt.setInt(1, i);
			pStmt.executeUpdate();
		}
		if(pStmt!=null)
		{
			pStmt.close();
		}
		if (conn!=null)
		{
			conn.close();
		}
	}
}


-- > time java test3

real    0m8.242s
user    0m0.782s
sys     0m0.059s


